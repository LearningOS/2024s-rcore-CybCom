(function() {var type_impls = {
"os":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BlockDevice-for-VirtIOBlock\" class=\"impl\"><a class=\"src rightside\" href=\"src/os/drivers/block/virtio_blk.rs.html#21-36\">source</a><a href=\"#impl-BlockDevice-for-VirtIOBlock\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl BlockDevice for <a class=\"struct\" href=\"os/drivers/block/virtio_blk/struct.VirtIOBlock.html\" title=\"struct os::drivers::block::virtio_blk::VirtIOBlock\">VirtIOBlock</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/os/drivers/block/virtio_blk.rs.html#23-28\">source</a><a href=\"#method.read_block\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">read_block</a>(&amp;self, block_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Read a block from the virtio_blk device</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/os/drivers/block/virtio_blk.rs.html#30-35\">source</a><a href=\"#method.write_block\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">write_block</a>(&amp;self, block_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write a block to the block device.</div></details></div></details>","BlockDevice","os::board::BlockDeviceImpl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VirtIOBlock\" class=\"impl\"><a class=\"src rightside\" href=\"src/os/drivers/block/virtio_blk.rs.html#38-48\">source</a><a href=\"#impl-VirtIOBlock\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"os/drivers/block/virtio_blk/struct.VirtIOBlock.html\" title=\"struct os::drivers::block::virtio_blk::VirtIOBlock\">VirtIOBlock</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/os/drivers/block/virtio_blk.rs.html#41-47\">source</a><h4 class=\"code-header\">pub fn <a href=\"os/drivers/block/virtio_blk/struct.VirtIOBlock.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new VirtIOBlock driver with VIRTIO0 base_addr for virtio_blk device</p>\n</div></details></div></details>",0,"os::board::BlockDeviceImpl"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()